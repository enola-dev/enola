// SPDX-License-Identifier: Apache-2.0
//
// Copyright 2023 The Enola <https://enola.dev> Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.2
// source: enola_core.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ID of an Entity known to Enola, fully qualified.
// Can be formatted to and parsed from several different string text forms,
// see class dev.enola.core.IDs.
type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace.
	// Serves to distinguish same entity names (below).
	// This is optional if in your use of Enola you avoid name conflicts.
	// It's like in C# or "package" in Java or Go or the xmlns: from XML Schema,
	// or whatever the hell confusing thing ;) that Python is doing about this.
	// Validated to only contain [a-z0-9_.] characters, so it's safe in URLs.
	// By convention can contain '.' for sub-namespacing, but does not have to.
	// The namespace of an Entity is always the same as its EntityKind.
	Ns string `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	// Entity Kind Name.
	// This is mandatory and thus always present.
	// This refers to an EntityKind and not an individual Entity, despite the
	// name. (In practice this is just shorter and clearer for people to
	// understand.) Validated to only contain [a-z0-9_] characters, so it's safe
	// in URLs.
	Entity string `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
	// Path.
	// This is mandatory and thus always present with at least 1 element.
	// Think of this as what would typically uniquely identify this entity IRL;
	// e.g. a "hostname" or some UUID or a S/N or whatever is its "primary key".
	// Validated to only contain [a-z0-9_-.] characters, so it's safe in URLs.
	// (This restriction could in theory be relaxed, if there was a strong need
	// to support it; as long as sufficient test coverage is added for correct
	// encoding in URIs, see https://en.m.wikipedia.org/wiki/URL_encoding.)
	// Multiple "segments" are supported for "composed keys", for example a
	// network/context/namespace/name kind of ID.
	Paths []string `protobuf:"bytes,3,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enola_core_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_enola_core_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_enola_core_proto_rawDescGZIP(), []int{0}
}

func (x *ID) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *ID) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *ID) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *ID                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ts *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=ts,proto3" json:"ts,omitempty"`
	// Related Enola Entities.
	// Intended for consumption by both machines as well as humans.
	// Key is EntityKind#related.key (modeled by EntityRelationship), value is ID.
	Related map[string]*ID `protobuf:"bytes,5,rep,name=related,proto3" json:"related,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// URIs linked to this entity providing additional information about it on
	// other systems.
	//
	// Key is EntityKind#link.key, value is an URI, often pointing to "back-end"
	// state information, used e.g. to determine an Entity's status, etc.
	//
	// If http[s]: then these are informational and destined to be displayed to a
	// human on a UI, but not "machine readable" for interpretation. Any other URI
	// scheme is intended to be (only) machine readable and up to the client to
	// interpret. This URI may well be specific to the respective schema
	// connector.
	//
	// These can be requested to be "inlined" in responses.
	Link map[string]string `protobuf:"bytes,7,rep,name=link,proto3" json:"link,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Data about the Entity, in machine readable form, as Any protobuf.
	// TODO replace Struct with Any, but that needs schemas... map<string,
	// google.protobuf.Any> data = 9;
	Data map[string]*structpb.Struct `protobuf:"bytes,9,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enola_core_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_enola_core_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_enola_core_proto_rawDescGZIP(), []int{1}
}

func (x *Entity) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Entity) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Entity) GetRelated() map[string]*ID {
	if x != nil {
		return x.Related
	}
	return nil
}

func (x *Entity) GetLink() map[string]string {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *Entity) GetData() map[string]*structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetEntityRequest) Reset() {
	*x = GetEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enola_core_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityRequest) ProtoMessage() {}

func (x *GetEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enola_core_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityRequest.ProtoReflect.Descriptor instead.
func (*GetEntityRequest) Descriptor() ([]byte, []int) {
	return file_enola_core_proto_rawDescGZIP(), []int{2}
}

func (x *GetEntityRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Entity `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *GetEntityResponse) Reset() {
	*x = GetEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enola_core_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityResponse) ProtoMessage() {}

func (x *GetEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enola_core_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityResponse.ProtoReflect.Descriptor instead.
func (*GetEntityResponse) Descriptor() ([]byte, []int) {
	return file_enola_core_proto_rawDescGZIP(), []int{3}
}

func (x *GetEntityResponse) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

var File_enola_core_proto protoreflect.FileDescriptor

var file_enola_core_proto_rawDesc = []byte{
	0x0a, 0x10, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x64, 0x65, 0x76, 0x2e, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x42, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0xde, 0x03, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73,
	0x12, 0x3d, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x34, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x4e, 0x0a, 0x0c, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x44,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x4c,
	0x69, 0x6e, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x36, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x65, 0x6e, 0x6f,
	0x6c, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x32, 0x62, 0x0a, 0x0c, 0x45, 0x6e, 0x6f, 0x6c, 0x61, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x20, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2b, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x2e, 0x65,
	0x6e, 0x6f, 0x6c, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x0e, 0x64, 0x65, 0x76, 0x2f, 0x65, 0x6e, 0x6f, 0x6c, 0x61, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0xd8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_enola_core_proto_rawDescOnce sync.Once
	file_enola_core_proto_rawDescData = file_enola_core_proto_rawDesc
)

func file_enola_core_proto_rawDescGZIP() []byte {
	file_enola_core_proto_rawDescOnce.Do(func() {
		file_enola_core_proto_rawDescData = protoimpl.X.CompressGZIP(file_enola_core_proto_rawDescData)
	})
	return file_enola_core_proto_rawDescData
}

var file_enola_core_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_enola_core_proto_goTypes = []interface{}{
	(*ID)(nil),                    // 0: dev.enola.core.ID
	(*Entity)(nil),                // 1: dev.enola.core.Entity
	(*GetEntityRequest)(nil),      // 2: dev.enola.core.GetEntityRequest
	(*GetEntityResponse)(nil),     // 3: dev.enola.core.GetEntityResponse
	nil,                           // 4: dev.enola.core.Entity.RelatedEntry
	nil,                           // 5: dev.enola.core.Entity.LinkEntry
	nil,                           // 6: dev.enola.core.Entity.DataEntry
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 8: google.protobuf.Struct
}
var file_enola_core_proto_depIdxs = []int32{
	0,  // 0: dev.enola.core.Entity.id:type_name -> dev.enola.core.ID
	7,  // 1: dev.enola.core.Entity.ts:type_name -> google.protobuf.Timestamp
	4,  // 2: dev.enola.core.Entity.related:type_name -> dev.enola.core.Entity.RelatedEntry
	5,  // 3: dev.enola.core.Entity.link:type_name -> dev.enola.core.Entity.LinkEntry
	6,  // 4: dev.enola.core.Entity.data:type_name -> dev.enola.core.Entity.DataEntry
	0,  // 5: dev.enola.core.GetEntityRequest.id:type_name -> dev.enola.core.ID
	1,  // 6: dev.enola.core.GetEntityResponse.entity:type_name -> dev.enola.core.Entity
	0,  // 7: dev.enola.core.Entity.RelatedEntry.value:type_name -> dev.enola.core.ID
	8,  // 8: dev.enola.core.Entity.DataEntry.value:type_name -> google.protobuf.Struct
	2,  // 9: dev.enola.core.EnolaService.GetEntity:input_type -> dev.enola.core.GetEntityRequest
	3,  // 10: dev.enola.core.EnolaService.GetEntity:output_type -> dev.enola.core.GetEntityResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_enola_core_proto_init() }
func file_enola_core_proto_init() {
	if File_enola_core_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_enola_core_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enola_core_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enola_core_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enola_core_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enola_core_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_enola_core_proto_goTypes,
		DependencyIndexes: file_enola_core_proto_depIdxs,
		MessageInfos:      file_enola_core_proto_msgTypes,
	}.Build()
	File_enola_core_proto = out.File
	file_enola_core_proto_rawDesc = nil
	file_enola_core_proto_goTypes = nil
	file_enola_core_proto_depIdxs = nil
}
