# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2024 The Enola <https://enola.dev> Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO Merge this with (higher-level) https://docs.enola.dev/concepts/roadmap/ (and gen. that from this!)
# TODO Merge old ToDo.md into this (and gen. a MD from this, put on the site)

label: Enola.dev ToDo
type: https://enola.dev/todo/List
items:
  - MIME Model:
      created: 2024-10-05
      items:
        - infer inverses
        - GEXF & Gephi
      tags: [exec]

  - Gephi/SigmaJS Network Graph Format:
      tags: [visualization, ui, docgen, rosetta]
      links:
        - https://www.sigmajs.org
        - https://docs.enola.dev/concepts/other/#visualization
        - https://visjs.github.io/vis-network/docs/network/#importGephi

  - Exec Connector!:
      tags: [exec]
      links:
        - https://camel.apache.org/components/4.4.x/exec-component.html

  - Write Thing API implementation directly (natively, no converter) on top of RDF4j:
      description: "Test it with ThingTester"
      tags: [rdf, tech]

  - Make ImmutableThing.Builder a Thing.Builder2; then consider (?) to abandon the MutableThing:
      description: "Test it with ThingTester"
      tags: [clean, tech]

  - JSON Schema as Meta:
      links:
        - https://github.com/lbovet/scardif

  - Time API: &timeAPI
      done: 2024-08-11
      status: DONE

  - GraphViz Diagrams: &graphviz
      owner: vorburger
      created: 2024-08-10
      done: 2024-10-05
      status: DONE
      tags: [visualization, ui, docgen, rosetta]

  - Hierarchy API: &hierarchyAPI
      description: "Cluster Things in (first) GraphViz, and (later) GEXF."
      status: WIP

  - GEXF: &gexf
      target: 2024-08-11
      description: "https://gexf.net equivalent of Graphviz"
      depends: [*graphviz, *hierarchyAPI, *timeAPI]
      tags: [visualization, ui, docgen, rosetta]
      items:
        - GEXF 1.3 Java API? Or just write out Text?:
            links: https://github.com/francesco-ficarola/gexf4j

  - Graphs in HTML Web UI:
      description:
        "The goal is to have a https://www.sigmajs.org/demo/index.html like view of
        https://docs.enola.dev/concepts/graph/."
      links: ["https://github.com/visjs/vis-network/issues/505#issuecomment-2282725937"]
      depends: [*gexf]
      target: 2024-08-11

  - HTML Links Loading & Graph Visualization:
      tags: [html]
      description:
        "For now, not generic XML, just all flat https://enola.dev/links, or (better) http://www.w3.org/1999/xhtml/a and
        http://www.w3.org/1999/xhtml/link#stylesheet (rel & HREF)."

  - Enola CLI Fish Shell Completion:
      description: Find, try & document some tool which can auto generate Fish completions from Bash and/or ZSH scripts.
      links:
        - https://github.com/remkop/picocli/pull/1925
        - https://github.com/remkop/picocli/issues/725
        - https://fishshell.com/docs/current/completions.html
        - https://github.com/adaszko/complgen
        - https://docs.enola.dev/use/help/#generate-completion

  - YAML (and TextProto) Things I/O: &yamlThing
      created: 2024-03-23
      description:
        Read & write a Turtle-like YAML (and TextProto, see TextThings in things.proto) syntax reader & writer. This is
        NOT the same as the JSON-LD context support, although perhaps this could be based on that - TBC. Partially done,
        needs testing, and documentation.
      links:
        - https://github.com/enola-dev/enola/pull/607/files
        - https://github.com/enola-dev/enola/pull/765/files

  - Implement ToDo Model: &modelToDo
      links: https://github.com/enola-dev/dora/tree/main/TODO
      description: Make this very file (ToDo.yaml) `--load`-able, and visualizable as Graph, and DocGen-able as MD.
      depends: *yamlThing
      tags: [model]
      items:
        - ? Write `todo.esch.yaml` & `todo-context.jsonld` in `models/enola.dev/todo/`

  - Enola API Entry Point class:
      links:
        - https://tika.apache.org/3.0.0-BETA/api/org/apache/tika/Tika.html
      tags: [clean]

  - Last `null` NPE, for Enola: &lastNPE
      links:
        - https://github.com/enola-dev/enola/issues/845

  - Don't load JS from unpkg.com, but use the local copies from the //third_party module:
      tags: [google]

  - Re-evaluate LinkML:
      tags: [clean]

  - Document Web Server in Tutorial:
      tags: [docs]

  - Load directories as needed, protected by a flag; use an enola:hide=true:
      created: 2024-08-18
      tags: [model, docs]

  - Inference; hard-coded, or with Datalog:
      items:
        - RDFS class properties inverse.. hard-coded in Java? With a SparQL query? With Datalog?
        - Is this an RDFS specific inference rule, or can we write it meta - for all owl:inverseOf properties?!
        - Infer enola:seeAlso mutually reverse bi-directional
      links:
        # @seeAlso other.ttl
        - https://docs.enola.dev/concepts/other/#datalog
      created: 2024-08-18
      tags: [datalog, infer]

  - Meta Java Code Generator: &metaJavaCodegen
      created: 2024-08-17
      links: https://github.com/enola-dev/enola/pull/839
      tags: [java]

  - Hierarchy Tree View:
      description:
        The goal is to have a https://observablehq.com/@d3/collapsible-tree like view of
        https://docs.enola.dev/models/hierarchy/.

  - Inference with LLM:
      created: 2024-05-19
      description: What files are in directory xyz? Is abc under xyz, even indirectly?
      tags: [ml, infer]

  - Bazel model: &bazel
      created: 2024-08-18

  - Strict Build, with `--load --strict`:
      created: 2024-08-18
      links:
        - fix (build): Re-enable mkdocs --strict again #820

  - Close all [open old PRs](https://github.com/enola-dev/enola/pulls):
      created: 2024-01-01
      tags: [contributors]

  - Finish writing v1.0 of new Java Url/URI/IRI class: &iri
      created: 2024-08-17
      java: dev.enola.common.io.iri.IRI
      links: https://github.com/enola-dev/enola/pull/837

  - Kubernetes Model:
      target: 2024-09-15

  - ? Queries with SparQL

  - ? Persistent Store

  - Extract, load and validate TTL from code blocks in Markdown by parsing MD:
      tags: [markdown]

  - Tika: &tika
      created: 2024-09-22

  - Markdown Model: &modelMarkdown
      created: 2024-02-18
      description: "Load Markdown files and their interlinks as Things!"
      links: ["https://github.com/enola-dev/enola/labels/model%2Fmarkdown"]
      depends: [*metaJavaCodegen, *tika]
      tags: [markdown]

  - Automatically infer `enola:parent` for each path segment of a Thing's IRI; add enola:hide=true:
      created: 2024-08-18

  - Automatically add `owl:sameAs` for each normalized Thing IRI, if it's any different:
      description: "Also follow HTTP redirects, and also add those as sameAs."
      created: 2024-08-18
      depends: [*iri]

  - Add properties about URL domain to all Things:
      description: "E.g. https://nubank.com.br/en/ should be associated with geoname:brazil! Also geo-resolve IPs."
      created: 2024-08-18
      depends: [*iri]

  - Extract Thing from Markdown YAML frontmatter:
      created: 2024-08-18
      depends: [*yamlThing]
      tags: [markdown]
      links:
        - docs/concepts/turtle.md

  - Try [rdflib](https://rdflib.readthedocs.io/)'s `rdf2dot` and `rdfs2dot`:
      created: 2024-08-18
      links:
        - https://rdflib.readthedocs.io/en/stable/_modules/rdflib/tools/rdf2dot.html
        - https://rdflib.readthedocs.io/en/stable/_modules/rdflib/tools/rdfs2dot.html

  - Timeline Diagrams:
      tags: [visualization, ui, docgen, rosetta]
      depends: [*graphviz, *timeAPI]
      done: 2024-08-16
      status: WIP

  - Format: &format
      description: ./enola format **/* = Canonicalizer for in-place bulk formatting

  - Meta YAML reader:
      status: TBD

  - Re-design Thing Java API:
      description: Factor out is/Not/Link from GraphvizGenerator; re-think API.

  - Document UI in Tutorial:
      tags: [doc]

  - Genealogy: &genealogy
    description:
      Re-create https://github.com/vorburger/kingraph of [Simpsons &
      Potters](https://github.com/vorburger/kingraph/tree/main/examples) with Enola
    tags: [model, genealogy, helpwanted]

  - Render `enola:Markdown` Datatype correctly in Browser:
      links:
        - https://github.com/markedjs/marked

  - Update W3C Wiki etc. with links to Enola docs:
      tags: [market]
      links:
        - https://www.w3.org/wiki/ConverterToRdf
        - https://freedesktop.org/wiki/Specifications/shared-mime-info-spec/

  - Things on Blockchains: &blockchain
      links:
        - https://github.com/enola-dev/enola/issues/777
      tags: [ipld]

  - Visualize Graphs in 3D:
      links:
        - https://graphviz.org/docs/outputs/pov/
        - https://graphviz.org/docs/outputs/vrml/

  - Validation:
      depends: [*metaJavaCodegen]

  - Geo:
      depends: [*tika]
      links:
        - https://rdf4j.org/documentation/programming/geosparql/
        - https://github.com/locationtech
        - https://github.com/enola-dev/enola/issues/611
        - https://tika.apache.org/3.0.0-BETA2/formats.html#Scientific_formats

  - ? Merge this `ToDo.yaml` with [`ToDo.md`](ToDo.md)

  - Split Datatype pure-RegExp (with TLC, configurable in Repo) from Java Converter (with DI with @AutoService, fix):
      tags: [clean]

  - Make Rosetta --load multiple inputs instead of --in: &rosettaLoad

  - Unify DocGen into Rosetta:
      tags: [ui, docgen, rosetta]
      depends: [*rosettaLoad]

  - Unify UI with Rosetta:
      tags: [ui, rosetta]

  - Java Model:
      tags: [model, java]
      depends: [*tika]
      links:
        - https://tika.apache.org/3.0.0-BETA2/formats.html#Java_class_files_and_archives
        - https://github.com/enola-dev/enola/issues/727

  - Maven Model:
      tags: [model, maven]
      links:
        - https://github.com/enola-dev/enola/issues/726

  - Kythe: &kythe
      links:
        - https://github.com/enola-dev/enola/issues/872

  - Support `data:` scheme:
      links:
        - https://datatracker.ietf.org/doc/html/rfc2397

  - Search:
      depends: [*tika]
      links:
        - https://lucene.apache.org

  - Marvel: &marvel
    description: Re-create https://www.marvel-graphs.net with Enola
    tags: [model, helpwanted, demo]

  - Replace TLC for Classes with @Inject DI:
      description:
        With [Dagger](https://dagger.dev)? But how suitable is it for different *Test VS e.g. CLI set-up? (Keep TLC for
        per-request Locale, TZ, etc.)
      tags: [ui, rosetta]

  - JetBrains Gateway with Dev Container:
      links: https://www.jetbrains.com/help/idea/connect-to-devcontainer.html
      tags: [contributors, doc]

  - Document Enola Things YAML/JSON/HTML (?) Format: &docRosettaThingsYAML
      description: java:RosettaTest#testTurtleToThings should be documented in file:docs/use/rosetta/index.md
      links:
        - https://github.com/enola-dev/enola/pull/607
      tags: [doc]

  - LSP for YAML format, to validate and auto-complete like Turtle Editors doc:
      depends: [*yamlThing]

  - VSC Extension:
      description: Package Enola.dev CLI up into a Visual Studio Code extension that can installed from Marketplace!
      todo:prio: todo:low

  - Graphviz in Java fully integrated into Enola binary:
      links:
        - https://github.com/jamisonjiang/graph-support
        - https://github.com/nidi3/graphviz-java
      todo:prio: todo:very-low
      tags: [func]

  - Start over and rewrite it all ;-) using https://Flix.dev: &flix
      description:
        First, see if it can be used simply as a "strongly typed" TTL or YAML alternative? Is it reflective, can I gen.
        TTL from it? Specifically its Datalog support... how would this work? Can it read ext. data?
      tags: [tech, datalog, infer]
      created: 2024-08-18

  # Archive of all "fully done" stuff. (File order doesn't matter, just moved here to be out of the way above.)

  - Clean Up all old model related code & doc:
      tags: [clean, doc]
      done: 2024-08-24

# Tags!
tags:
  func:
    rosetta:
    format:
      turtle:
      jsonld:
    connect:
      http:
      exec:
    model:
      file:
      net:
      bazel:
      html:
      markdown:
      java:
      mime:
    gen:
      docgen:
        mdgen:
      visualization:
        graph:
          graphviz:
          gexf:
          sigmajs:
        timeline:
          visjs:
    ui:
    blockchain:
      ipfs:
        ipld:
    demo:
      doc:
  biz:
    market:
  tech:
    clean:
