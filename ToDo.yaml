# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2024 The Enola <https://enola.dev> Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# See also (higher-level) https://docs.enola.dev/concepts/roadmap/ (TODO merge)

label: Enola.dev ToDo
type: https://enola.dev/todo/List
items:
  - Inference with Datalog:
      created: 2024-08-18
      links:
        - https://docs.enola.dev/concepts/other/#datalog
      tags: [datalog, infer]

  - Retry writing this in TTL instead YAML, using `@base`:
      links: //docs/concepts/turtle.md

  - Meta Java Code Generator: &metaJavaCodegen
      links: https://github.com/enola-dev/enola/pull/839
      tags: [java]

  - Close all [open old PRs](https://github.com/enola-dev/enola/pulls):
      tags: [contributors]

  - Inference with LLM:
      description: What files are in directory xyz? Is abc under xyz, even indirectly?
      tags: [ml, infer]

  - Extract, load and validate TTL from code blocks in Markdown by parsing MD:
      tags: [markdown]

  - Markdown Model: &modelMarkdown
      description: "oad Markdown files and their interlinks as Things!"
      links: ["https://github.com/enola-dev/enola/labels/model%2Fmarkdown"]
      depends: [*metaJavaCodegen]
      tags: [markdown]

  - YAML (and TextProto) Things I/O: &yamlThing
      description:
        Read & write a Turtle-like YAML (and TextProto, see TextThings in things.proto) syntax reader & writer. This is
        NOT the same as the JSON-LD context support, although perhaps this could be based on that - TBC.
      links:
        - https://github.com/enola-dev/enola/pull/607/files
        - https://github.com/enola-dev/enola/pull/765/files

  - Extract Thing from Markdown YAML frontmatter:
      depends: [*yamlThing]
      tags: [markdown]
      links:
        - docs/concepts/turtle.md

  - Finish writing v1.0 of new Java Url/URI/IRI class:
      java: dev.enola.common.io.iri.IRI
      links: https://github.com/enola-dev/enola/pull/837

  - Try [rdflib](https://rdflib.readthedocs.io/)'s `rdf2dot` and `rdfs2dot`:
      created: 2024-08-18
      links:
        - https://rdflib.readthedocs.io/en/stable/_modules/rdflib/tools/rdf2dot.html
        - https://rdflib.readthedocs.io/en/stable/_modules/rdflib/tools/rdfs2dot.html

  - GraphViz Diagrams: &graphviz
      owner: vorburger
      done: 2024-08-10
      status: WIP
      tags: [visualization, ui, docgen, rosetta]

  - Hierarchy API: &hierarchyAPI
      description: "Cluster Things in (first) GraphViz, and (later) GEXF."
      status: WIP

  - Time API: &timeAPI
      done: 2024-08-11
      status: DONE

  - GEXF: &gexf
      target: 2024-08-11
      description: "https://gexf.net equivalent of Graphviz"
      depends: [*graphviz, *hierarchyAPI, *timeAPI]
      tags: [visualization, ui, docgen, rosetta]
      items:
        - GEXF 1.3 Java API? Or just write out Text?:
            links: https://github.com/francesco-ficarola/gexf4j

  - Graphs in HTML Web UI:
      description:
        "The goal is to have a https://www.sigmajs.org/demo/index.html like view of
        https://docs.enola.dev/concepts/graph/."
      links: ["https://github.com/visjs/vis-network/issues/505#issuecomment-2282725937"]
      depends: [*gexf]
      target: 2024-08-11

  - Timeline Diagrams:
      tags: [visualization, ui, docgen, rosetta]
      depends: [*graphviz, *timeAPI]
      done: 2024-08-16
      status: WIP

  - Format: &format
      description: ./enola format **/* = Canonicalizer for in-place bulk formatting

  - Kubernetes Model:
      target: 2024-09-15

  - ? Queries with SparQL

  - ? Persistent Store

  - Meta YAML reader:
      status: TBD

  - Re-design Thing Java API:
      description: Factor out is/Not/Link from GraphvizGenerator; re-think API.

  - Document UI in Tutorial:
      tags: [doc]

  - Clean Up all old model related code & doc:
      tags: [clean, doc]

  - Genealogy: &genealogy
    description:
      Re-create https://github.com/vorburger/kingraph of [Simpsons &
      Potters](https://github.com/vorburger/kingraph/tree/main/examples) with Enola
    tags: [model, genealogy, helpwanted]

  - Remove (?) LinkML:
      tags: [clean]

  - Render `enola:Markdown` Datatype correctly in Browser:
      links:
        - https://github.com/markedjs/marked

  - Implement ToDo Model: &modelToDo
      links: https://github.com/enola-dev/dora/tree/main/TODO
      description: Make this very file (ToDo.yaml) `--load`-able, and visualizable as Graph, and DocGen-able as MD.
      tags: [model]
      items:
        - ? Write `todo.esch.yaml` & `todo-context.jsonld` in `models/enola.dev/todo/`

  - Visualize Graphs in 3D:
      links:
        - https://graphviz.org/docs/outputs/pov/
        - https://graphviz.org/docs/outputs/vrml/

  - Validation:
      depends: [*metaJavaCodegen]

  - ? Merge this `ToDo.yaml` with [`ToDo.md`](ToDo.md)

  - Split Datatype pure-RegExp (with TLC, configurable in Repo) from Java Converter (with DI with @AutoService, fix):
      tags: [clean]

  - Make Rosetta --load multiple inputs instead of --in: &rosettaLoad

  - Unify DocGen into Rosetta:
      tags: [ui, docgen, rosetta]
      depends: [*rosettaLoad]

  - Unify UI with Rosetta:
      tags: [ui, rosetta]

  - Support `data:` scheme:
      links:
        - https://datatracker.ietf.org/doc/html/rfc2397

  - Marvel: &marvel
    description: Re-create https://www.marvel-graphs.net with Enola
    tags: [model, helpwanted]

  - Replace TLC for Classes with @Inject DI:
      description:
        With [Dagger](https://dagger.dev)? But how suitable is it for different *Test VS e.g. CLI set-up? (Keep TLC for
        per-request Locale, TZ, etc.)
      tags: [ui, rosetta]

  - JetBrains Gateway with Dev Container:
      links: https://www.jetbrains.com/help/idea/connect-to-devcontainer.html
      tags: [contributors, doc]

  - Document Enola Things YAML/JSON/HTML (?) Format: &docRosettaThingsYAML
      description: java:RosettaTest#testTurtleToThings should be documented in file:docs/use/rosetta/index.md
      tags: [doc]

  - Gephi/SigmaJS Network Graph Format:
      depends: [*graphviz]
      tags: [visualization, ui, docgen, rosetta]
      links:
        - https://www.sigmajs.org
        - https://docs.enola.dev/concepts/other/#visualization
        - https://visjs.github.io/vis-network/docs/network/#importGephi

  - Graphviz in Java fully integrated into Enola binary:
      links:
        - https://github.com/jamisonjiang/graph-support
        - https://github.com/nidi3/graphviz-java

# Archive of all "fully done" stuff. (File order doesn't matter, just moved here to be out of the way above.)

tags:
  - clean
  - doc
  - docgen
  - ui
  - rosetta
  - model
  - visualization
