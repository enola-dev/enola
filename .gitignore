# Bazel
/bazel-bin
/bazel-enola
/bazel-out
/bazel-testlogs

# Gradle
build/
.gradle

# IntelliJ
.ijwb/
.idea/*
# https://www.jetbrains.com/help/idea/managing-plugins.html#required-plugins
!.idea/externalDependencies.xml
.run/

# Eclipse JDT with VSC Bazel for Java (bazel-vscode-java)
.eclipse/

# mkdocs
# incl. e.g. .cache/plugin/git-committers/page-authors.json
site/
.cache/

# Enola (self, "dog üêï fooding!"") generated docs content
docs/models/

# asciinema, used in demo/**
docs/use/**/*.cast
docs/use/**/script
docs/use/**/*.svg
docs/use/**/*.output

# Generated Docs
docs/BUILT/**

# Node.JS
node_modules/
web/web-out/

# Be
.be/

# Maven
java/.mvn/wrapper/maven-wrapper.jar
java/target
.built/.m2

# https://jbang.dev
.jbang/

tools/version/VERSION

# LinkML
.built

# https://github.com/VirtusLab/bazel-steward/issues/424
bazel-steward.jar

# Bazel BSP, by https://docs.google.com/document/d/1fdLN1iONuRm--PhpDNYXpEOPPwKML8bG5OJv9AbCvEI/edit?tab=t.0
.bazelbsp/

# https://github.com/flox/install-flox-action/issues/106
flox.x86_64-linux.deb

# Nix & direnv
# TODO https://github.com/direnv/direnv/issues/1434
.direnv/
/result

# Python Virtual Environment (venv)
.venv/

# The *.java etc. under generated/ are created at build-time by tools/protoc.
# So we ignore everything in it, EXCEPT for the generated/protoc/java/BUILD file.
# PS: Due to https://github.com/NixOS/nix/issues/14024, it's done like this?
# (That was the initial thought, but it may not be true; did not re-verify.)
generated/protoc/java/dev/
generated/classpath
generated/javac-processors/
generated/java-class
