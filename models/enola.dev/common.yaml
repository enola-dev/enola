# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2024 The Enola <https://enola.dev> Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Common
id: dev.enola.common
iri: https://enola.dev/common
java:package: dev.enola.model.enola.common

.prefixes:
  xsd: http://www.w3.org/2001/XMLSchema#

datatypes:
  String:
    description:
      Any text string, incl. spaces and newlines etc. No HTML or Markdown though. Use sparingly; prefer more specific
      types!
    iri: https://enola.dev/String
    java:type: java.lang.String
    xsd: xsd:string
  Text:
    description:
      Text incl. spaces and newlines etc. which is meaningful to humans (and LLMs), in a specific syntax such as a human
      or programming language.
    iri: https://schema.org/Text
    parent: String
  Text1:
    description: Text in a single paragraph, without newlines.
    iri: https://enola.dev/Text1
    parent: Text
  Markdown:
    description: Text which is interpreted as Markdown.
    iri: https://enola.dev/Markdown
    parent: Text
  Identifier:
    description: String which identifies things to machines; not necessarily globally unique.
    iri: https://enola.dev/Identifier
    parent: String
  Name:
    description: Camel Case, with underscores OK, but no spaces or dots or colons or hyphens.
    iri: https://enola.dev/Name
    parent: Identifier
    # TODO regexp: "^[a-zA-Z][a-zA-Z0-9_]*$"
    xsd: xsd:NCName
  # TODO Having both Names & ID is a bit confusing... can we get rid of one of them?!
  Names:
    description: With underscores and dots, but no spaces or colons or hyphens.
    iri: https://enola.dev/Names
    parent: Identifier
    # TODO regexp: "^[a-zA-Z][a-zA-Z0-9_.]*$"
    xsd: xsd:NMTOKEN
  ID:
    description: With underscores and dots and colons, but no spaces or hyphens or slashes.
    iri: https://enola.dev/ID
    parent: Identifier
    # TODO regexp: "^[a-zA-Z][a-zA-Z0-9_.:]*$"
    xsd: xsd:ID
  IRI:
    # TODO Reconsider later if this is *really* needed...
    description:
      Logical (may not "resolve") absolute or relative IRI. Do NOT use this when you can instead better use a strongly
      typed real link!
    iri: https://enola.dev/IRI
    parent: Identifier
    java:type: java.net.URI
    xsd: xsd:anyURI
  URL:
    description: Physical (typically "resolves") absolute or relative IRI.
    iri: https://schema.org/URL
    parent: Identifier
    java:type: java.net.URI
    xsd: xsd:anyURI
  MediaType:
    iri: https://enola.dev/MediaType
    java:type: com.google.common.net.MediaType
  Timestamp:
    description: Date and Time; global, without timezone.
    iri: https://enola.dev/Timestamp
    java:type: java.time.Instant
    xsd: xsd:dateTime
    enola:emoji: ðŸ•‘

properties:
  name:
    type: Name
    description: Name of Thing. When part of an ID, often its (and IRI's) last segment.
    iri: https://enola.dev/name
  label:
    type: String
    iri: https://www.w3.org/TR/rdf-schema/#ch_label
    description: Label of Thing. For humans, may have spaces etc.
    parent: name
  description:
    type: String
    iri: https://schema.org/description
    description: Description of Thing. Basically a longer label.
  emoji:
    type: String
    iri: https://enola.dev/emoji
  iri_template:
    type: String # Templates are *NOT* valid IRI (or URL)
    iri: https://enola.org/IRITemplate
  example:
    type: IRI
    iri: https://enola.dev/example
