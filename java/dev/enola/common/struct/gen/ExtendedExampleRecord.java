/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2025 The Enola <https://enola.dev> Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Auto generated by io.soabase.recordbuilder.core.RecordBuilder:
// https://github.com/Randgalt/record-builder
package dev.enola.common.struct.gen;

import dev.enola.common.struct.CustomDatatype;
import dev.enola.common.struct.Example;
import dev.enola.common.struct.ExtendedExample;

import io.soabase.recordbuilder.core.RecordBuilder;

import java.math.BigDecimal;
import java.net.URI;
import java.time.Instant;
import java.util.List;
import java.util.Map;
import java.util.Set;

@RecordBuilder
public record ExtendedExampleRecord(
        CustomDatatype customDatatype,
        BigDecimal bigDecimal,
        URI url,
        String text,
        Integer number,
        Instant instant,
        Example example,
        List<Example> examplesInOrder,
        Set<Example> examplesBag,
        Map<String, Example> map)
        implements ExtendedExample, dev.enola.common.struct.gen.ExtendedExampleRecordBuilder.With {}
