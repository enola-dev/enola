// Auto generated by io.soabase.recordbuilder.core.RecordBuilder: https://github.com/Randgalt/record-builder
package dev.enola.common.struct;

import java.time.Instant;
import java.util.AbstractMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import java.util.function.Consumer;
import java.util.stream.Stream;
import javax.annotation.processing.Generated;

@Generated("io.soabase.recordbuilder.core.RecordBuilder")
public class ExampleRecordBuilder {
    private String text;

    private Integer number;

    private Instant instant;

    private Example example;

    private List<Example> examplesInOrder;

    private Set<Example> examplesBag;

    private Map<String, Example> map;

    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    private ExampleRecordBuilder() {
    }

    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    private ExampleRecordBuilder(String text, Integer number, Instant instant, Example example,
            List<Example> examplesInOrder, Set<Example> examplesBag, Map<String, Example> map) {
        this.text = text;
        this.number = number;
        this.instant = instant;
        this.example = example;
        this.examplesInOrder = examplesInOrder;
        this.examplesBag = examplesBag;
        this.map = map;
    }

    /**
     * Static constructor/builder. Can be used instead of new ExampleRecord(...)
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public static ExampleRecord ExampleRecord(String text, Integer number, Instant instant,
            Example example, List<Example> examplesInOrder, Set<Example> examplesBag,
            Map<String, Example> map) {
        return new ExampleRecord(text, number, instant, example, examplesInOrder, examplesBag, map);
    }

    /**
     * Return a new builder with all fields set to default Java values
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public static ExampleRecordBuilder builder() {
        return new ExampleRecordBuilder();
    }

    /**
     * Return a new builder with all fields set to the values taken from the given record instance
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public static ExampleRecordBuilder builder(ExampleRecord from) {
        return new ExampleRecordBuilder(from.text(), from.number(), from.instant(), from.example(), from.examplesInOrder(), from.examplesBag(), from.map());
    }

    /**
     * Return a "with"er for an existing record instance
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public static ExampleRecordBuilder.With from(ExampleRecord from) {
        return new _FromWith(from);
    }

    /**
     * Return a stream of the record components as map entries keyed with the component name and the value as the component value
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public static Stream<Map.Entry<String, Object>> stream(ExampleRecord record) {
        return Stream.of(new AbstractMap.SimpleImmutableEntry<>("text", record.text()),
                 new AbstractMap.SimpleImmutableEntry<>("number", record.number()),
                 new AbstractMap.SimpleImmutableEntry<>("instant", record.instant()),
                 new AbstractMap.SimpleImmutableEntry<>("example", record.example()),
                 new AbstractMap.SimpleImmutableEntry<>("examplesInOrder", record.examplesInOrder()),
                 new AbstractMap.SimpleImmutableEntry<>("examplesBag", record.examplesBag()),
                 new AbstractMap.SimpleImmutableEntry<>("map", record.map()));
    }

    /**
     * Return a new record instance with all fields set to the current values in this builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public ExampleRecord build() {
        return new ExampleRecord(text, number, instant, example, examplesInOrder, examplesBag, map);
    }

    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    @Override
    public String toString() {
        return "ExampleRecordBuilder[text=" + text + ", number=" + number + ", instant=" + instant + ", example=" + example + ", examplesInOrder=" + examplesInOrder + ", examplesBag=" + examplesBag + ", map=" + map + "]";
    }

    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    @Override
    public int hashCode() {
        return Objects.hash(text, number, instant, example, examplesInOrder, examplesBag, map);
    }

    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    @Override
    public boolean equals(Object o) {
        return (this == o) || ((o instanceof ExampleRecordBuilder r)
                && Objects.equals(text, r.text)
                && Objects.equals(number, r.number)
                && Objects.equals(instant, r.instant)
                && Objects.equals(example, r.example)
                && Objects.equals(examplesInOrder, r.examplesInOrder)
                && Objects.equals(examplesBag, r.examplesBag)
                && Objects.equals(map, r.map));
    }

    /**
     * Set a new value for the {@code text} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public ExampleRecordBuilder text(String text) {
        this.text = text;
        return this;
    }

    /**
     * Return the current value for the {@code text} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public String text() {
        return text;
    }

    /**
     * Set a new value for the {@code number} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public ExampleRecordBuilder number(Integer number) {
        this.number = number;
        return this;
    }

    /**
     * Return the current value for the {@code number} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public Integer number() {
        return number;
    }

    /**
     * Set a new value for the {@code instant} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public ExampleRecordBuilder instant(Instant instant) {
        this.instant = instant;
        return this;
    }

    /**
     * Return the current value for the {@code instant} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public Instant instant() {
        return instant;
    }

    /**
     * Set a new value for the {@code example} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public ExampleRecordBuilder example(Example example) {
        this.example = example;
        return this;
    }

    /**
     * Return the current value for the {@code example} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public Example example() {
        return example;
    }

    /**
     * Set a new value for the {@code examplesInOrder} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public ExampleRecordBuilder examplesInOrder(List<Example> examplesInOrder) {
        this.examplesInOrder = examplesInOrder;
        return this;
    }

    /**
     * Return the current value for the {@code examplesInOrder} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public List<Example> examplesInOrder() {
        return examplesInOrder;
    }

    /**
     * Set a new value for the {@code examplesBag} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public ExampleRecordBuilder examplesBag(Set<Example> examplesBag) {
        this.examplesBag = examplesBag;
        return this;
    }

    /**
     * Return the current value for the {@code examplesBag} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public Set<Example> examplesBag() {
        return examplesBag;
    }

    /**
     * Set a new value for the {@code map} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public ExampleRecordBuilder map(Map<String, Example> map) {
        this.map = map;
        return this;
    }

    /**
     * Return the current value for the {@code map} record component in the builder
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public Map<String, Example> map() {
        return map;
    }

    /**
     * Add withers to {@code ExampleRecord}
     */
    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    public interface With {
        /**
         * Return the current value for the {@code text} record component in the builder
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        String text();

        /**
         * Return the current value for the {@code number} record component in the builder
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        Integer number();

        /**
         * Return the current value for the {@code instant} record component in the builder
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        Instant instant();

        /**
         * Return the current value for the {@code example} record component in the builder
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        Example example();

        /**
         * Return the current value for the {@code examplesInOrder} record component in the builder
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        List<Example> examplesInOrder();

        /**
         * Return the current value for the {@code examplesBag} record component in the builder
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        Set<Example> examplesBag();

        /**
         * Return the current value for the {@code map} record component in the builder
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        Map<String, Example> map();

        /**
         * Return a new record builder using the current values
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        default ExampleRecordBuilder with() {
            return new ExampleRecordBuilder(text(), number(), instant(), example(), examplesInOrder(), examplesBag(), map());
        }

        /**
         * Return a new record built from the builder passed to the given consumer
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        default ExampleRecord with(Consumer<ExampleRecordBuilder> consumer) {
            ExampleRecordBuilder builder = with();
            consumer.accept(builder);
            return builder.build();
        }

        /**
         * Return a new instance of {@code ExampleRecord} with a new value for {@code text}
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        default ExampleRecord withText(String text) {
            return new ExampleRecord(text, number(), instant(), example(), examplesInOrder(), examplesBag(), map());
        }

        /**
         * Return a new instance of {@code ExampleRecord} with a new value for {@code number}
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        default ExampleRecord withNumber(Integer number) {
            return new ExampleRecord(text(), number, instant(), example(), examplesInOrder(), examplesBag(), map());
        }

        /**
         * Return a new instance of {@code ExampleRecord} with a new value for {@code instant}
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        default ExampleRecord withInstant(Instant instant) {
            return new ExampleRecord(text(), number(), instant, example(), examplesInOrder(), examplesBag(), map());
        }

        /**
         * Return a new instance of {@code ExampleRecord} with a new value for {@code example}
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        default ExampleRecord withExample(Example example) {
            return new ExampleRecord(text(), number(), instant(), example, examplesInOrder(), examplesBag(), map());
        }

        /**
         * Return a new instance of {@code ExampleRecord} with a new value for {@code examplesInOrder}
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        default ExampleRecord withExamplesInOrder(List<Example> examplesInOrder) {
            return new ExampleRecord(text(), number(), instant(), example(), examplesInOrder, examplesBag(), map());
        }

        /**
         * Return a new instance of {@code ExampleRecord} with a new value for {@code examplesBag}
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        default ExampleRecord withExamplesBag(Set<Example> examplesBag) {
            return new ExampleRecord(text(), number(), instant(), example(), examplesInOrder(), examplesBag, map());
        }

        /**
         * Return a new instance of {@code ExampleRecord} with a new value for {@code map}
         */
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        default ExampleRecord withMap(Map<String, Example> map) {
            return new ExampleRecord(text(), number(), instant(), example(), examplesInOrder(), examplesBag(), map);
        }
    }

    @Generated("io.soabase.recordbuilder.core.RecordBuilder")
    private static final class _FromWith implements ExampleRecordBuilder.With {
        private final ExampleRecord from;

        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        private _FromWith(ExampleRecord from) {
            this.from = from;
        }

        @Override
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        public String text() {
            return from.text();
        }

        @Override
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        public Integer number() {
            return from.number();
        }

        @Override
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        public Instant instant() {
            return from.instant();
        }

        @Override
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        public Example example() {
            return from.example();
        }

        @Override
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        public List<Example> examplesInOrder() {
            return from.examplesInOrder();
        }

        @Override
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        public Set<Example> examplesBag() {
            return from.examplesBag();
        }

        @Override
        @Generated("io.soabase.recordbuilder.core.RecordBuilder")
        public Map<String, Example> map() {
            return from.map();
        }
    }
}
