# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2023-2025 The Enola <https://enola.dev> Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# GENERATED FILE - DO NOT EDIT MANUALLY
# To make changes, instead of editing this MODULE.bazel, edit
# either MODULE.bazel.handlebars or MODULE.bom.handlebars.yaml,
# and then re-run ./MODULE.update.bash

# https://registry.bazel.build/modules/rules_java
bazel_dep(name = "rules_java", version = "8.16.1")

# see ./tools/java_toolchain/BUILD
# see https://github.com/bazelbuild/bazel/issues/20877, NB the "_definition" suffix!
register_toolchains("//tools/java_toolchain:repository_default_java_toolchain_definition")

# https://github.com/bazelbuild/rules_go/blob/master/docs/go/core/bzlmod.md
bazel_dep(name = "rules_go", version = "0.57.0")
bazel_dep(name = "gazelle", version = "0.45.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Do NOT use go_sdk.host(), see https://github.com/enola-dev/enola/issues/713
go_sdk.download(version = "1.22.4")

# https://github.com/bazelbuild/rules_jvm_external/blob/master/docs/bzlmod.md#installation
# When bumping the version here, must always run: REPIN=1 bazelisk run @maven//:pin
bazel_dep(name = "rules_jvm_external", version = "6.8")

# https://github.com/bazel-contrib/rules_jvm_external/issues/1426
bazel_dep(name = "bazel_skylib", version = "1.8.2")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    name = "maven",
    artifacts = [
        "com.google.code.findbugs:jsr305:3.0.2",
        "com.google.code.gson:gson:2.13.1",
        "junit:junit:4.13.2",
        "com.google.api.grpc:grpc-google-cloud-pubsub-v1:1.123.2",
        "com.google.api.grpc:proto-google-cloud-pubsub-v1:1.123.2",
        "com.google.auto.value:auto-value:1.11.0",
        "com.google.auto.service:auto-service:1.1.1",
        "com.google.auto.service:auto-service-annotations:1.1.1",
        "com.google.jimfs:jimfs:1.3.1",
        "com.google.truth.extensions:truth-java8-extension:1.4.5",
        "com.google.truth.extensions:truth-proto-extension:1.4.5",
        "com.google.protobuf:protobuf-java:4.32.0",
        "com.google.protobuf:protobuf-java-util:4.32.0",
        "io.grpc:grpc-netty:1.75.0",
        "io.grpc:grpc-stub:1.75.0",
        "io.grpc:grpc-inprocess:1.75.0",
        "org.apache.tomcat:annotations-api:6.0.53",
        "org.eclipse.rdf4j:rdf4j-common-iterator:5.1.4",
        "org.eclipse.rdf4j:rdf4j-common-transaction:5.1.4",
        "org.eclipse.rdf4j:rdf4j-model:5.1.4",
        "org.eclipse.rdf4j:rdf4j-rio-jsonld:5.1.4",
        "org.eclipse.rdf4j:rdf4j-rio-turtle:5.1.4",
        "org.eclipse.rdf4j:rdf4j-repository-sail:5.1.4",
        "org.eclipse.rdf4j:rdf4j-sail-memory:5.1.4",
        "org.eclipse.rdf4j:rdf4j-sail-nativerdf:5.1.4",
        "org.eclipse.rdf4j:rdf4j-query:5.1.4",
        "com.fasterxml.jackson.core:jackson-databind:2.19.2",
        "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.19.2",
        "ch.vorburger.exec:exec:3.3.2",
        "com.github.java-json-tools:uri-template:0.10",
        "info.picocli:picocli:4.7.7",
        "info.picocli:picocli-shell-jline3:4.7.7",
        "info.picocli:picocli-codegen:4.7.6",
        "org.snakeyaml:snakeyaml-engine:2.10",
        "org.yaml:snakeyaml:2.5",
        "org.slf4j:slf4j-jdk14:2.0.17",
        "org.slf4j:slf4j-simple:2.0.17",
        "org.apache.logging.log4j:log4j-to-jul:2.25.1",
        "io.github.classgraph:classgraph:4.8.181",
        "com.google.errorprone:error_prone_annotations:2.41.0",
        "org.jspecify:jspecify:1.0.0",
        "com.squareup.okhttp3:okhttp:4.12.0",
        "com.squareup.okhttp3:logging-interceptor:4.12.0",
        "dev.dirs:directories:26",
        "dev.langchain4j:langchain4j:1.6.0",
        "dev.langchain4j:langchain4j-ollama:1.6.0",
        "dev.langchain4j:langchain4j-google-ai-gemini:1.6.0",
        "dev.langchain4j:langchain4j-anthropic:1.6.0",
        "dev.langchain4j:langchain4j-easy-rag:1.6.0-beta12",
        "io.github.ollama4j:ollama4j:1.0.100",
        "com.github.spotbugs:spotbugs-annotations:4.9.3",
        "io.github.java-diff-utils:java-diff-utils:4.16",
        "org.jsoup:jsoup:1.21.1",
        "com.github.package-url:packageurl-java:1.5.0",
        "eu.maveniverse.maven.mima.runtime:standalone-static:2.4.31",
        "eu.maveniverse.maven.mima:context:2.4.31",
        "eu.maveniverse.maven.mima.extensions:mmr:2.4.31",
        "org.apache.maven.resolver:maven-resolver-api:2.0.10",
        "org.apache.maven.resolver:maven-resolver-util:2.0.10",
        "org.apache.maven:maven-model:3.9.11",
        "org.codehaus.plexus:plexus-xml:4.1.0",
        "com.github.ipld:java-cid:v1.3.10",
        "com.github.ipfs:java-ipfs-http-client:d982fc0fa1",
        "com.github.multiformats:java-multibase:03702505e959cafbebfcf7990848ee124017c27d",
        "com.github.multiformats:java-multihash:d238c77f11a0ff33970ad43578ae11f049324848",
        "org.jline:jline:3.30.4",
        "org.jetbrains.pty4j:pty4j:0.13.4",
        "com.github.valfirst:slf4j-test:3.0.1",
        "org.apache.sshd:sshd-core:2.15.0",
        "de.swiesend:secret-service:2.0.1-alpha",
        "com.github.vorburger.adk-java:google-adk-dev:e60bddf6502bbfac5af3fb993acc100439c0d90f",
        "org.commonmark:commonmark:0.25.0",
        "io.modelcontextprotocol.sdk:mcp:0.11.3",
    ],

    # NB: Never de-activate duplicate_version_warning = "error"!
    # While it can be tempting to resolve a build-time problem which
    # may have occurred when changing dependencies, it will only cause
    # runtime problems due to "classpath hell" later; it's ALWAYS better
    # to clean versions at build time!
    duplicate_version_warning = "error",
    # TODO Investigate why 'excluded_artifacts' is still needed, despite maven.artifact() exclusions?!
    excluded_artifacts = [
        # Thanks, but No Thanks! (Spring Boot drags this along, with ADK.)
        "ch.qos.logback:logback-core",
        "ch.qos.logback:logback-classic",

        # Most certainly no JS scripting! (jknack:handlebars drags this cat along)
        "org.openjdk.nashorn:nashorn-core",

        # List e.g. "com.github.multiformats:java-multihash" etc. here
        #   if using "com.github.vorburger:*" instead above, for unmerged patched versions.

        # https://commons.apache.org/proper/commons-logging/ is a PITA,
        # because it contains package org.apache.commons.logging, which we
        # already get from org.slf4j:jcl-over-slf4j, see https://www.slf4j.org/legacy.html
        "commons-logging:commons-logging",
        # Spring Boot (which we unfortunately use due to ADK Web's reliance on Spring Boot)
        # aggressively configures logging on its own, but we actually don't want that, because
        # our CLI already does it, so:
        "org.springframework.boot:spring-boot-starter-logging",
        # ROME Utils classes appear to also be included in com.rometools:rome - at least via Tika.
        "com.rometools:rome-utils",
        # ADK drags this cat along; Thanks, but No Thanks!
        "org.eclipse.jdt:ecj",
    ],
    fail_if_repin_required = True,
    fetch_sources = True,
    # https://github.com/enola-dev/enola/issues/1686
    # https://github.com/bazel-contrib/rules_jvm_external/blob/master/docs/bzlmod.md#module-dependency-layering
    known_contributing_modules = [
        "",
        "grpc-java",
        "protobuf",
    ],
    lock_file = "//:maven_install.json",
    repositories = [
        # Override legacy default https://repo1.maven.org/maven2/
        "https://repo.maven.apache.org/maven2/",

        # Used by Multiformats, IPFS & IPLD
        "https://jitpack.io",
    ],
    resolver = "maven",
)
maven.artifact(
    artifact = "google-adk",
    exclusions = [
        "io.modelcontextprotocol.sdk:mcp",
    ],
    group = "com.github.vorburger.adk-java",
    version = "e60bddf6502bbfac5af3fb993acc100439c0d90f",
)
maven.artifact(
    artifact = "google-adk-langchain4j",
    exclusions = [
        "org.eclipse.jdt:ecj",
        "ch.qos.logback:logback-core",
        "ch.qos.logback:logback-classic",
        "org.springframework.boot:spring-boot-starter-logging",
        "io.modelcontextprotocol.sdk:mcp",
    ],
    group = "com.github.vorburger.adk-java",
    version = "e60bddf6502bbfac5af3fb993acc100439c0d90f",
)
maven.artifact(
    artifact = "guava",
    exclusions = [
        "org.codehaus.mojo:animal-sniffer-annotations",
        "com.google.j2objc:j2objc-annotations",
    ],
    group = "com.google.guava",
    version = "33.4.8-jre",
)
maven.artifact(
    artifact = "handlebars",
    exclusions = [
        "org.openjdk.nashorn:nashorn-core",
    ],
    group = "com.github.jknack",
    version = "4.4.0",
)
maven.artifact(
    artifact = "google-genai",
    exclusions = [
        "commons-logging:commons-logging",
    ],
    group = "com.google.genai",
    version = "1.8.0",
)
maven.artifact(
    artifact = "tika-core",
    exclusions = [],
    group = "org.apache.tika",
    version = "3.0.0-BETA2",
)
maven.artifact(
    artifact = "tika-parsers-standard-package",
    exclusions = [
        "com.rometools:rome-utils",
    ],
    group = "org.apache.tika",
    version = "3.0.0-BETA2",
)
use_repo(maven, "maven")
