# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2023-2024 The Enola <https://enola.dev> Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# see ./tools/java_toolchain/BUILD
# see https://github.com/bazelbuild/bazel/issues/20877, NB the "_definition" suffix!
register_toolchains("//tools/java_toolchain:repository_default_java_toolchain_definition")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

GRPC_JAVA_VERSION = "1.61.0"

# https://github.com/grpc/grpc-java/
# https://github.com/enola-dev/enola/issues/202
# https://github.com/grpc/grpc-java/issues/10215
# TODO replace with bazel_dep in MODULE.bazel
# when https://github.com/bazelbuild/bazel-central-registry/issues/353
# (AKA https://github.com/grpc/grpc-java/issues/9559) is available.
http_archive(
    name = "io_grpc_grpc_java",
    sha256 = "301e0de87c7659cc790bd2a7265970a71632d55773128c98768385091c0a1a97",
    strip_prefix = "grpc-java-%s" % GRPC_JAVA_VERSION,
    url = "https://github.com/grpc/grpc-java/archive/refs/tags/v%s.zip" % GRPC_JAVA_VERSION,
)

load("@io_grpc_grpc_java//:repositories.bzl", "IO_GRPC_GRPC_JAVA_ARTIFACTS", "IO_GRPC_GRPC_JAVA_OVERRIDE_TARGETS")

# load("@io_grpc_grpc_java//:repositories.bzl", "grpc_java_repositories")
# grpc_java_repositories()
# load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
# protobuf_deps()

# https://rules-proto-grpc.com/en/latest/#installation
http_archive(
    name = "rules_proto_grpc",
    sha256 = "2a0860a336ae836b54671cbbe0710eec17c64ef70c4c5a88ccfd47ea6e3739bd",
    strip_prefix = "rules_proto_grpc-4.6.0",
    urls = ["https://github.com/rules-proto-grpc/rules_proto_grpc/releases/download/4.6.0/rules_proto_grpc-4.6.0.tar.gz"],
)

load("@rules_proto_grpc//:repositories.bzl", "rules_proto_grpc_repos", "rules_proto_grpc_toolchains")

rules_proto_grpc_toolchains()

rules_proto_grpc_repos()

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

# https://rules-proto-grpc.com/en/latest/lang/doc.html#doc-markdown-compile
load("@rules_proto_grpc//doc:repositories.bzl", rules_proto_grpc_doc_repos = "doc_repos")

rules_proto_grpc_doc_repos()

# https://rules-proto-grpc.com/en/latest/lang/buf.html#buf-proto-lint-test
load("@rules_proto_grpc//buf:repositories.bzl", rules_proto_grpc_buf_repos = "buf_repos")

rules_proto_grpc_buf_repos()

# https://github.com/bazelbuild/rules_jvm_external#usage
load("@rules_jvm_external//:repositories.bzl", "rules_jvm_external_deps")

rules_jvm_external_deps()

load("@rules_jvm_external//:setup.bzl", "rules_jvm_external_setup")

rules_jvm_external_setup()

# https://github.com/grpc/grpc-java/blob/master/examples/WORKSPACE
load("@rules_jvm_external//:defs.bzl", "maven_install")

maven_install(
    artifacts = IO_GRPC_GRPC_JAVA_ARTIFACTS + [
        "junit:junit:4.13.2",
        # Google
        "com.google.guava:guava:33.0.0-jre",
        # "com.google.truth:truth:1.2.0",
        "com.google.truth.extensions:truth-java8-extension:1.2.0",
        "com.google.template:soy:2023-09-13",
        # Protobuf
        "com.google.protobuf:protobuf-java:4.0.0-rc-2",
        "com.google.protobuf:protobuf-java-util:4.0.0-rc-2",
        # gRPC
        "io.grpc:grpc-netty:%s" % GRPC_JAVA_VERSION,
        "io.grpc:grpc-stub:%s" % GRPC_JAVA_VERSION,
        "io.grpc:grpc-inprocess:%s" % GRPC_JAVA_VERSION,
        "org.apache.tomcat:annotations-api:6.0.53",  # NOT :tomcat-annotations-api
        # kubernetes:client-java also depends on Protobuf (+gRPC?), version may need to be upgraded together
        "io.kubernetes:client-java:19.0.0",
        # Other
        "ch.vorburger.exec:exec:3.1.5",
        "com.github.java-json-tools:uri-template:0.10",
        "info.picocli:picocli:4.7.5",
        "org.snakeyaml:snakeyaml-engine:2.7",
        "org.slf4j:slf4j-jdk14:2.0.9",
        "org.slf4j:slf4j-simple:2.0.9",
        "io.github.classgraph:classgraph:4.8.165",
    ],
    # TODO duplicate_version_warning = "error",
    fetch_sources = True,
    generate_compat_repositories = True,
    maven_install_json = "//:maven_install.json",
    override_targets = IO_GRPC_GRPC_JAVA_OVERRIDE_TARGETS,
    repositories = [
        "https://repo.maven.apache.org/maven2/",
    ],
)

load("@maven//:compat.bzl", "compat_repositories")

compat_repositories()

load("@maven//:defs.bzl", "pinned_maven_install")

pinned_maven_install()

# https://github.com/bazelbuild/rules_closure/#setup
# TODO This is only useful after https://github.com/bazelbuild/rules_closure/issues/225
#http_archive(
#    name = "io_bazel_rules_closure",
#    sha256 = "9498e57368efb82b985db1ed426a767cbf1ba0398fd7aed632fc3908654e1b1e",
#    strip_prefix = "rules_closure-0.12.0",
#    urls = [
#        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
#        "https://github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
#    ],
#)

# load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
# rules_closure_dependencies()
# rules_closure_toolchains()
