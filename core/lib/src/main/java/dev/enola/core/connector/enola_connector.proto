// SPDX-License-Identifier: Apache-2.0
//
// Copyright 2023 The Enola <https://enola.dev> Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package dev.enola.core.connector;

import "core/lib/src/main/java/dev/enola/core/enola_core.proto";

option java_string_check_utf8 = true;
option java_package = "dev.enola.core.connector.proto";
option java_multiple_files = true;

message AugmentRequest {
  dev.enola.core.Entity entity = 1;
  // Intentionally no EntityKind! It would be wasteful to resend it every time.
}
message AugmentResponse {
  dev.enola.core.Entity entity = 1;
}
// This is the external equivalent of the internal EntityAspect Java API.
service ConnectorService {
  rpc Augment(AugmentRequest) returns (AugmentResponse) {}
}

// TODO Think more about if a Connector can (should?) also implement
// ModelService?
