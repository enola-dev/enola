# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2023-2024 The Enola <https://enola.dev> Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Read https://github.com/enola-dev/enola/issues/180 for background...

# This builds a container image for an Enola development environment.
# It may later be referenced in .devcontainer/devcontainer.json, but can
# also be used unrelated to https://containers.dev e.g. for local builds
# by the ./devenv script.

# TODO The https://containers.dev base image don't work on plain Debian...
# This is a "fat" container with a lot of ready tools
# from https://github.com/devcontainers/images/tree/main/src/universal
# (Note that "image": "mcr.microsoft.com/devcontainers/base:bookworm"
#  from https://github.com/devcontainers/images/tree/main/src/base-debian
#  from https://github.com/devcontainers/templates/tree/main/src/debian
#  is very (too) minimal, and we would need to add a lot...)
# FROM mcr.microsoft.com/devcontainers/universal:2-linux
FROM docker.io/library/debian:11

RUN apt update -y

RUN apt install -y fish g++ git curl unzip -y

# TODO useradd --shell fish ...
RUN adduser "developer"
# && \
#    sed -i 's/# %wheel/%wheel/' /etc/sudoers && \
#    sudo usermod -aG wheel "developer"
USER developer

# https://go.dev/doc/install (adapted for Fedora, which does not use ~/.profile, and ignores PATH in ~/.bash_profile)
RUN echo "export PATH=$PATH:/home/developer/go/bin" >> /home/developer/.bashrc

WORKDIR /workspace/
ADD tools /workspace/tools
ADD .tool-versions /workspace/

RUN /workspace/tools/devenv/install.bash

RUN echo "export PATH=$PATH:/home/developer/.asdf/installs/golang/1.22.0/packages/bin" >> /home/developer/.bashrc
RUN echo ". /home/developer/.asdf/asdf.sh" >> /home/developer/.bashrc

# See https://docs.docker.com/build/guide/mounts/ for documentation about --mount=type.
